<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="jboss-tattletale"
         default="dist"
         basedir="."
         xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="build.dir" value="${basedir}/build"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="doc.dir" value="${basedir}/doc"/>
    <property name="doc.api.dir" value="${doc.dir}/api"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="src.main.dir" value="${src.dir}/main"/>
    <property name="src.java.dir" value="${src.main.dir}/java"/>
    <property name="etc.dir" value="${src.main.dir}/resources"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="reports.dir" value="${basedir}/reports"/>
    <property name="tools.dir" value="${basedir}/tools"/>

    <property name="name" value="tattletale"/>
    <property name="major" value="1"/>
    <property name="minor" value="2"/>
    <property name="patch" value="0"/>
    <property name="type" value="Java6"/>

    <condition property="version" value="${major}.${minor}.${patch}-SNAPSHOT">
        <isset property="snapshot"/>
    </condition>
    <property name="version" value="${major}.${minor}.${patch}.${type}"/>

    <property name="java.target" value="1.6"/>
    <property name="java.api.doc" value="https://docs.oracle.com/javase/6/docs/api/"/>

    <property name="tattletale.jar" value="tattletale.jar"/>
    <property name="tattletale-sources.jar" value="tattletale-sources.jar"/>
    <property name="tattletale-javadoc.jar" value="tattletale-javadoc.jar"/>
    <property name="tattletale-ant.jar" value="tattletale-ant.jar"/>
    <property name="tattletale-ant-sources.jar" value="tattletale-ant-sources.jar"/>
    <property name="tattletale-ant-javadoc.jar" value="tattletale-ant-javadoc.jar"/>
    <property name="tattletale-maven.jar" value="tattletale-maven.jar"/>
    <property name="tattletale-maven-sources.jar" value="tattletale-maven-sources.jar"/>
    <property name="tattletale-maven-javadoc.jar" value="tattletale-maven-javadoc.jar"/>
    <property name="tattletale-tools.jar" value="tattletale-tools.jar"/>
    <property name="tattletale-tools-sources.jar" value="tattletale-tools-sources.jar"/>
    <property name="tattletale-tools-javadoc.jar" value="tattletale-tools-javadoc.jar"/>

    <!-- =================================
         Repositories
         ================================= -->
    <property name="central.repo" value="https://repo1.maven.org/maven2"/>
    <property name="jboss.repo" value="https://repository.jboss.org/nexus/content/groups/public/"/>
    <property name="snapshots.repo" value="https://snapshots.jboss.org/maven2"/>

    <!-- =================================
         Maven repository settings
         ================================= -->
    <property name="mavensettings" value="$HOME/.m2/settings.xml"/>

    <condition property="repositoryurl" value="https://repository.jboss.org/nexus/content/repositories/snapshots/">
        <isset property="snapshot"/>
    </condition>
    <property name="repositoryurl" value="https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/"/>

    <condition property="repositoryid" value="jboss-snapshots">
        <isset property="snapshot"/>
    </condition>
    <property name="repositoryid" value="jboss-releases"/>

    <!-- =================================
         Ivy
         ================================= -->
    <property name="ivy.version" value="2.5.0"/>
    <property name="ivy.dir" value="${user.home}/.ivy2/cache/org.apache.ivy/jars"/>
    <property name="ivy.jar.name" value="ivy-${ivy.version}.jar"/>
    <available property="has.ivy" file="${ivy.dir}/${ivy.jar.name}" type="file"/>

    <!-- =================================
         Versions
         ================================= -->
    <property name="version.ant" value="1.9.15"/>
    <property name="version.maven" value="3.2.5"/>
    <property name="version.javassist" value="3.23.1-GA"/>
    <property name="version.checkstyle" value="6.1.1"/>

    <!-- =================================================================== -->
    <!-- Define the class path                                               -->
    <!-- =================================================================== -->
    <path id="class.path">
        <fileset dir="${lib.dir}/core">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="test.class.path">
        <fileset dir="${lib.dir}/test">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${dist.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- =================================
         Bootstrap Ivy
         ================================= -->
    <target name="get.ivy" unless="has.ivy">
        <mkdir dir="${ivy.dir}"/>
        <get usetimestamp="true"
             src="${central.repo}/org/apache/ivy/ivy/${ivy.version}/${ivy.jar.name}"
             skipexisting="true"
             dest="${ivy.dir}/${ivy.jar.name}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Initialize                                                          -->
    <!-- =================================================================== -->
    <target name="init" depends="get.ivy">
       <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.dir}/${ivy.jar.name}"/>
       <ivy:settings file="${basedir}/ivy.settings.xml"/>
    </target>

    <!-- =================================
         Target: resolve
         ================================= -->
    <target name="resolve" depends="init">
       <ivy:retrieve pattern="${lib.dir}/[conf]/[artifact].[ext]"
                     conf="core"
                     sync="true"/>
    </target>

    <!-- =================================================================== -->
    <!-- Prepares the directory structure                                    -->
    <!-- =================================================================== -->
    <target name="prepare" depends="init">
       <mkdir dir="${build.dir}"/>
       <mkdir dir="${dist.dir}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Jars                                                                -->
    <!-- =================================================================== -->
    <target name="jars" depends="prepare,resolve">
        <delete dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/META-INF"/>
        <mkdir dir="${build.dir}/META-INF/maven"/>

        <copy file="src/main/java/org/jboss/tattletale/Version.java.in"
              tofile="${build.dir}/org/jboss/tattletale/Version.java">
          <filterset>
            <filter token="VERSION" value="${version}"/>
          </filterset>
        </copy>
        <copy file="src/main/java/org/jboss/tattletale/package.html"
              todir="${build.dir}/org/jboss/tattletale/"/>
        <javac destdir="${build.dir}"
               classpathref="class.path"
               debug="on"
               deprecation="on"
               optimize="off"
               source="${java.target}"
               target="${java.target}"
               includeantruntime="false">
            <src path="${build.dir}"/>
        </javac>

        <javac destdir="${build.dir}"
               classpathref="class.path"
               debug="on"
               deprecation="on"
               optimize="off"
               source="${java.target}"
               target="${java.target}"
               includeantruntime="false">
            <src path="${src.java.dir}"/>
        </javac>

        <copy todir="${build.dir}">
            <fileset dir="${etc.dir}">
               <include name="**/jboss-tattletale.properties"/>
            </fileset>
            <fileset dir="${etc.dir}">
               <include name="**/*.clz"/>
               <include name="**/*.clz.gz"/>
            </fileset>
            <fileset dir="${etc.dir}">
               <include name="**/*.css"/>
            </fileset>
        </copy>
        <copy todir="${build.dir}">
            <fileset dir="${etc.dir}">
               <include name="**/antlib.xml"/>
            </fileset>
        </copy>
        <copy todir="${build.dir}">
            <fileset dir="${etc.dir}">
               <include name="**/plugin.xml"/>
            </fileset>
            <filterset>
              <filter token="VERSION.TATTLETALE" value="${version}"/>
            </filterset>
        </copy>
        <jar destfile="${dist.dir}/${tattletale.jar}"
             basedir="${build.dir}"
             manifest="${etc.dir}/META-INF/core-manifest.mf"
             includes="org/jboss/tattletale/**,**/*.properties,**/*.clz,**/*.clz.gz,**/*.css"
             excludes="**/ant/**,**/maven/**,**/tools/**,**/*.java"/>

        <jar destfile="${dist.dir}/${tattletale-ant.jar}"
             basedir="${build.dir}"
             manifest="${etc.dir}/META-INF/ant-manifest.mf"
             includes="org/jboss/tattletale/ant/**"
             excludes="**/*.java"/>

        <jar destfile="${dist.dir}/${tattletale-maven.jar}"
             basedir="${build.dir}"
             manifest="${etc.dir}/META-INF/maven-manifest.mf"
             includes="org/jboss/tattletale/maven/**,META-INF/**"
             excludes="**/*.java">
        </jar>

        <jar destfile="${dist.dir}/${tattletale-tools.jar}"
             basedir="${build.dir}"
             manifest="${etc.dir}/META-INF/tools-manifest.mf"
             includes="org/jboss/tattletale/tools/**,META-INF/**"
             excludes="**/*.java">
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Artifacts                                                           -->
    <!-- =================================================================== -->
    <target name="artifacts" depends="jars">

        <!-- Sources -->
        <jar destfile="${dist.dir}/${tattletale-sources.jar}"
             basedir="${src.java.dir}"
             includes="**/*.java"
             excludes="**/ant/**,**/maven/**"/>

        <jar destfile="${dist.dir}/${tattletale-ant-sources.jar}"
             basedir="${src.java.dir}"
             includes="**/ant/*.java"/>

        <jar destfile="${dist.dir}/${tattletale-maven-sources.jar}"
             basedir="${src.java.dir}"
             includes="**/maven/*.java"/>

        <mkdir dir="${build.dir}/artifact-javadoc"/>
        <javadoc destdir="${build.dir}/artifact-javadoc"
                 author="true"
                 version="true"
                 windowtitle="JBoss Tattletale"
                 doctitle="JBoss Tattletale"
                 use="true"
                 classpathref="class.path"
                 bottom="Copyright &amp;copy; 2011 JBoss (http://www.jboss.org/)">
            <packageset dir="${build.dir}" defaultexcludes="yes"/>
            <packageset dir="src/main/java" defaultexcludes="yes">
                <exclude name="**/ant/**"/>
                <exclude name="**/maven/**"/>
            </packageset>
            <link offline="true" href="${java.api.doc}" packagelistLoc="${java.home}/../docs/api"/>
        </javadoc>
        <jar destfile="${dist.dir}/${tattletale-javadoc.jar}"
             basedir="${build.dir}/artifact-javadoc"/>
        <delete dir="${build.dir}/artifact-javadoc"/>

        <mkdir dir="${build.dir}/artifact-javadoc"/>
        <javadoc destdir="${build.dir}/artifact-javadoc"
                 author="true"
                 version="true"
                 windowtitle="JBoss Tattletale"
                 doctitle="JBoss Tattletale"
                 use="true"
                 classpathref="class.path"
                 bottom="Copyright &amp;copy; 2011 JBoss (http://www.jboss.org/)">
            <packageset dir="${build.dir}" defaultexcludes="yes"/>
            <packageset dir="src/main/java" defaultexcludes="yes">
                <include name="**/ant/**"/>
            </packageset>
            <link offline="true" href="${java.api.doc}" packagelistLoc="${java.home}/../docs/api"/>
        </javadoc>
        <jar destfile="${dist.dir}/${tattletale-ant-javadoc.jar}"
             basedir="${build.dir}/artifact-javadoc"
             includes="**/ant/**"/>
        <delete dir="${build.dir}/artifact-javadoc"/>

        <mkdir dir="${build.dir}/artifact-javadoc"/>
        <javadoc destdir="${build.dir}/artifact-javadoc"
                 author="true"
                 version="true"
                 windowtitle="JBoss Tattletale"
                 doctitle="JBoss Tattletale"
                 use="true"
                 classpathref="class.path"
                 bottom="Copyright &amp;copy; 2011 JBoss (http://www.jboss.org/)">
            <packageset dir="${build.dir}" defaultexcludes="yes"/>
            <packageset dir="src/main/java" defaultexcludes="yes">
                <include name="**/maven/**"/>
            </packageset>
            <link offline="true" href="${java.api.doc}" packagelistLoc="${java.home}/../docs/api"/>
        </javadoc>
        <jar destfile="${dist.dir}/${tattletale-maven-javadoc.jar}"
             basedir="${build.dir}/artifact-javadoc"
             includes="**/maven/**"/>
        <delete dir="${build.dir}/artifact-javadoc"/>

    </target>

    <!-- =================================================================== -->
    <!-- Doc                                                                 -->
    <!-- =================================================================== -->
    <target name="doc">
        <mkdir dir="${doc.api.dir}"/>
        <javadoc packagenames="org.*"
                 sourcepath="${src.java.dir}"
                 destdir="${doc.api.dir}"
                 author="true"
                 version="true"
                 windowtitle="JBoss Tattletale"
                 doctitle="JBoss Tattletale"
                 use="true"
                 classpathref="class.path"
                 bottom="Copyright &amp;copy; 2011 JBoss (http://www.jboss.org/)">
             <link offline="true" href="${java.api.doc}" packagelistLoc="${java.home}/../docs/api"/>
        </javadoc>
        <ant dir="doc/userguide" target="pdf"/>
        <ant dir="doc/developerguide" target="pdf"/>
    </target>

    <!-- =================================================================== -->
    <!-- Dist                                                                -->
    <!-- =================================================================== -->
    <target name="dist" depends="jars">
        <copy todir="${dist.dir}">
            <fileset dir="${lib.dir}/core">
                <include name="**/*.jar"/>
                <exclude name="**/ant.jar"/>
                <exclude name="**/maven-plugin-api.jar"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}">
            <fileset dir="${etc.dir}">
                <include name="**/log4j.xml"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}">
            <fileset dir="${etc.dir}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}">
            <fileset dir="${doc.dir}">
                <include name="*.txt"/>
                <include name="*.html"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Release                                                             -->
    <!-- =================================================================== -->
    <target name="release" depends="clean,dist">
        <delete dir="${build.dir}"/>

        <ant dir="doc/userguide" target="pdf"/>
        <ant dir="doc/developerguide" target="pdf"/>

        <mkdir dir="${build.dir}/${name}-${major}.${minor}.${patch}.${type}"/>

        <move flatten="true" todir="${build.dir}/${name}-${major}.${minor}.${patch}.${type}">
            <fileset dir="${dist.dir}">
                <include name="**/*.pdf"/>
            </fileset>
        </move>

        <delete dir="${build.dir}/docbook"/>
        <delete dir="${build.dir}/en"/>

        <move todir="${build.dir}/${name}-${major}.${minor}.${patch}.${type}"
              includeEmptyDirs="false">
            <fileset dir="${dist.dir}">
                <include name="**/*"/>
                <exclude name="**/${tattletale-tools.jar}"/>
            </fileset>
        </move>

        <zip destfile="${name}-${major}.${minor}.${patch}.${type}.zip"
             basedir="${build.dir}"/>

        <tar destfile="${name}-${major}.${minor}.${patch}.${type}.tar"
             basedir="${build.dir}"/>

        <gzip zipfile="${name}-${major}.${minor}.${patch}.${type}.tar.gz"
              src="${name}-${major}.${minor}.${patch}.${type}.tar"/>

        <delete file="${name}-${major}.${minor}.${patch}.${type}.tar"/>
    </target>

    <!-- =================================
         Target: checkstyle
         ================================= -->
    <target name="checkstyle" depends="jars">
        <ivy:cachepath organisation="com.puppycrawl.tools" module="checkstyle" revision="${version.checkstyle}"
                       inline="true" conf="default" pathid="checkstyle.class.path"/>
        <taskdef resource="com/puppycrawl/tools/checkstyle/antlib.xml" classpathref="checkstyle.class.path"/>

        <mkdir dir="${reports.dir}/checkstyle"/>

        <checkstyle config="${tools.dir}/checkstyle/checkstyle.xml"
                    failOnViolation="false"
                    classpathref="checkstyle.class.path">
            <fileset dir="${basedir}"
                     includes="**/*.java"/>
            <formatter type="plain"/>
            <formatter type="xml" toFile="${reports.dir}/checkstyle/checkstyle-result.xml"/>
        </checkstyle>
    </target>

    <!-- =================================================================== -->
    <!-- Clean                                                               -->
    <!-- =================================================================== -->
    <target name="clean">
        <delete>
            <fileset dir="${basedir}" defaultexcludes="no">
                <include name="**/*~"/>
                <include name="**/*.bak"/>
            </fileset>
        </delete>
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${doc.api.dir}"/>
        <delete dir="${reports.dir}"/>
        <delete file="${name}-${major}.${minor}.${patch}.${type}.zip"/>
        <delete file="${name}-${major}.${minor}.${patch}.${type}.tar.gz"/>
    </target>

    <!-- =================================
         Target: clean-cache
         ================================= -->
    <target name="clean-cache">
        <ivy:cleancache/>
    </target>

    <!-- =================================
         Target: nexus
         ================================= -->
    <macrodef name="deploy-file">
        <attribute name="file"/>
        <attribute name="artifact"/>
        <attribute name="extension"/>
        <sequential>
            <concat destfile="${dist.dir}/@{file}" append="true" force="true" eol="unix">
mvn -s ${mavensettings} org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file -Dfile=$PWD/@{artifact}.@{extension} -DpomFile=@{artifact}.xml -Dsources=$PWD/@{artifact}-sources.jar -Djavadoc=$PWD/@{artifact}-javadoc.jar $REPOSITORY
</concat>
        </sequential>
    </macrodef>

    <macrodef name="install-file">
        <attribute name="file"/>
        <attribute name="artifact"/>
        <attribute name="extension"/>
        <sequential>
            <concat destfile="${dist.dir}/@{file}" append="true" force="true" eol="unix">
mvn install:install-file -Dfile=$PWD/@{artifact}.@{extension} -DpomFile=@{artifact}.xml -Dsources=$PWD/@{artifact}-sources.jar -Djavadoc=$PWD/@{artifact}-javadoc.jar
</concat>
        </sequential>
    </macrodef>

    <target name="nexus" depends="clean,artifacts">
        <ivy:retrieve pattern="${lib.dir}/[conf]/[artifact].[ext]"
                      conf="${name},${name}-ant,${name}-maven"
                      sync="true"/>

        <delete file="${dist.dir}/deploy.sh"/>
        <delete file="${dist.dir}/install.sh"/>

        <concat destfile="${dist.dir}/deploy.sh" append="true" force="true" eol="unix">#!/bin/sh
PWD=`pwd`
VERSION=${version}
REPOSITORY='-Durl=${repositoryurl} -DrepositoryId=${repositoryid}'
</concat>

        <concat destfile="${dist.dir}/install.sh" append="true" force="true" eol="unix">#!/bin/sh
PWD=`pwd`
VERSION=${version}
</concat>

        <!-- tattletale -->
        <delete file="${dist.dir}/${name}.xml"/>
        <ivy:makepom artifactName="${name}"
                     conf="${name}"
                     ivyfile="${basedir}/ivy.xml"
                     pomfile="${dist.dir}/${name}.xml"
                     headerFile="${basedir}/maven/HEADER"
                     templatefile="${basedir}/maven/pom.template"
                     printIvyInfo="false">
            <mapping conf="${name}" scope="runtime"/>
        </ivy:makepom>

        <deploy-file file="deploy.sh" artifact="${name}" extension="jar"/>
        <install-file file="install.sh" artifact="${name}" extension="jar"/>

        <!-- tattletale-ant -->
        <delete file="${dist.dir}/${name}-ant.xml"/>
        <ivy:makepom artifactName="${name}-ant"
                     conf="${name}-ant"
                     ivyfile="${basedir}/ivy.xml"
                     pomfile="${dist.dir}/${name}-ant.xml"
                     headerFile="${basedir}/maven/HEADER"
                     templatefile="${basedir}/maven/pom.template"
                     printIvyInfo="false">
            <mapping conf="${name}-ant" scope="runtime"/>
            <dependency artifact="${name}" scope="runtime"/>
        </ivy:makepom>

        <deploy-file file="deploy.sh" artifact="${name}-ant" extension="jar"/>
        <install-file file="install.sh" artifact="${name}-ant" extension="jar"/>

        <!-- tattletale-maven -->
        <delete file="${dist.dir}/${name}-maven.xml"/>
        <ivy:makepom artifactName="${name}-maven"
                     conf="${name}-maven"
                     ivyfile="${basedir}/ivy.xml"
                     pomfile="${dist.dir}/${name}-maven.xml"
                     headerFile="${basedir}/maven/HEADER"
                     templatefile="${basedir}/maven/pom.template"
                     printIvyInfo="false">
            <mapping conf="${name}-maven" scope="runtime"/>
            <dependency artifact="${name}" scope="runtime"/>
        </ivy:makepom>

        <deploy-file file="deploy.sh" artifact="${name}-maven" extension="jar"/>
        <install-file file="install.sh" artifact="${name}-maven" extension="jar"/>

        <chmod file="${dist.dir}/deploy.sh" perm="755"/>
        <chmod file="${dist.dir}/install.sh" perm="755"/>
    </target>

</project>
